// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package unitofwork

import (
	"context"
	mock "github.com/stretchr/testify/mock"
)

// MockWork is an autogenerated mock type for the Work type
type MockWork struct {
	mock.Mock
}

// Commit provides a mock function with given fields:
func (_m *MockWork) Commit() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// RollBack provides a mock function with given fields:
func (_m *MockWork) RollBack() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// RollbackUnlessCommitted provides a mock function with given fields:
func (_m *MockWork) RollbackUnlessCommitted() {
	_m.Called()
}

// MockFactory is an autogenerated mock type for the Factory type
type MockFactory struct {
	mock.Mock
}

// New provides a mock function with given fields: _a0
func (_m *MockFactory) New(_a0 context.Context) (Work, error) {
	ret := _m.Called(_a0)

	var r0 Work
	if rf, ok := ret.Get(0).(func(context.Context) Work); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(Work)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
